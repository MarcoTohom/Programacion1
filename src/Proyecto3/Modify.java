/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Proyecto3;

import java.io.*;
import java.util.Date;
import javax.swing.JOptionPane;

/**
 *
 * @author Marco
 */
public class Modify extends javax.swing.JFrame {
    long position = 0;
    static String setSize(String str, int size) {
        if (str.length() == size) {
            return str;
        } else if (str.length() < size) {
            String newStr = str;
            for (int i = str.length(); i < size; i++) {
                newStr = newStr.concat("|");
            }
            str = newStr;
        } else {
            String tempStr = "";
            for (int i = 0; i < size; i++) {
                tempStr = tempStr.concat(String.valueOf(str.charAt(i)));
            }
            str = tempStr;
        }
        return str;
    }
    
    static void agregarEvento(int pYear, int pMonth, int pDay, int pHour, String pNombreArtista, int pCantidadAsistentes, long pPosition) {
        try {
            RandomAccessFile rafEvents = new RandomAccessFile("eventos.bin", "rw"); //Se crea el archivo principal y el indice
            RandomAccessFile rafIndex = new RandomAccessFile("index.bin", "rw");
            File fileEvents = new File("eventos.bin"); //Se crean dos objetos de tipo File para validar su existencia
            File fileIndex = new File("eventos.bin");   //Y poder localizar la posicion.
            rafEvents.seek(pPosition);
            rafIndex.seek(pPosition);
            
            rafEvents.writeInt(pYear);
            rafIndex.writeInt(pYear);
            
            rafEvents.writeInt(pMonth);
            rafIndex.writeInt(pMonth);
            
            rafEvents.writeInt(pDay);
            rafIndex.writeInt(pDay);
            
            //rafIndex.writeLong(positionEvents);
            
            rafEvents.writeInt(pHour);
            pNombreArtista = setSize(pNombreArtista, 30);
            rafIndex.writeUTF(pNombreArtista);
            rafIndex.writeLong(pPosition);
            rafEvents.writeUTF(pNombreArtista);
            rafEvents.writeInt(pCantidadAsistentes);
            rafEvents.close();
            rafIndex.close();
            JOptionPane.showMessageDialog(null, "Se ha agendado el evento", "Listo", 0);
        } catch (FileNotFoundException fnfe) {
            JOptionPane.showMessageDialog(null, "Archivo no encontrado.", "Error", JOptionPane.INFORMATION_MESSAGE);
        } catch (IOException ioe) {
            JOptionPane.showMessageDialog(null, "Ha ocurrido un fallo en la escritura o lectura de la Base de Datos.", "Error", JOptionPane.INFORMATION_MESSAGE);
        }
    }
    
    /**
     * Creates new form Modify
     */
    public Modify() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jComboBoxYear = new javax.swing.JComboBox<>();
        jComboBoxMonth = new javax.swing.JComboBox<>();
        jComboBoxDay = new javax.swing.JComboBox<>();
        jButtonConsultar = new javax.swing.JButton();
        jTextFieldArtista = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jSpinnerCantidadAsistentes = new javax.swing.JSpinner();
        jComboBoxYear1 = new javax.swing.JComboBox<>();
        jButtonRegresar1 = new javax.swing.JButton();
        jComboBoxMes = new javax.swing.JComboBox<>();
        jComboBoxHora = new javax.swing.JComboBox<>();
        jComboBoxDia = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldArtista1 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jButtonModify = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("MODIFICAR");
        setLocationByPlatform(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jLabel2.setText("Artista:");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jComboBoxYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxYearActionPerformed(evt);
            }
        });

        jComboBoxMonth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre" }));
        jComboBoxMonth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxMonthActionPerformed(evt);
            }
        });

        jComboBoxDay.setEnabled(false);

        jButtonConsultar.setText("Consultar");
        jButtonConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConsultarActionPerformed(evt);
            }
        });

        jTextFieldArtista.setText("Artista");
        jTextFieldArtista.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldArtistaKeyTyped(evt);
            }
        });

        jLabel1.setText("Fecha del evento:");

        jSpinnerCantidadAsistentes.setModel(new javax.swing.SpinnerNumberModel(100, 100, 5000, 1));

        jComboBoxYear1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxYear1ActionPerformed(evt);
            }
        });

        jButtonRegresar1.setText("Regresar");
        jButtonRegresar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRegresar1ActionPerformed(evt);
            }
        });

        jComboBoxMes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre" }));
        jComboBoxMes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxMesActionPerformed(evt);
            }
        });

        jComboBoxHora.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23" }));
        jComboBoxHora.setEnabled(false);

        jComboBoxDia.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        jComboBoxDia.setEnabled(false);
        jComboBoxDia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxDiaActionPerformed(evt);
            }
        });

        jLabel3.setText("Mes");

        jLabel4.setText("Dia");

        jLabel5.setText("Hora");

        jTextFieldArtista1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldArtista1ActionPerformed(evt);
            }
        });
        jTextFieldArtista1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldArtista1KeyTyped(evt);
            }
        });

        jLabel6.setText("Artista:");

        jLabel7.setText("Numero de asistentes:");

        jButtonModify.setText("Modificar");
        jButtonModify.setEnabled(false);
        jButtonModify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModifyActionPerformed(evt);
            }
        });

        jLabel8.setText("AÃ±o:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(jTextFieldArtista))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonModify)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonRegresar1))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(jComboBoxYear, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBoxMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBoxDay, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel6)
                                    .addComponent(jComboBoxYear1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jComboBoxMes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jComboBoxDia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jComboBoxHora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextFieldArtista1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jSpinnerCantidadAsistentes, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButtonConsultar)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jComboBoxYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldArtista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButtonConsultar)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxYear1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxMes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxDia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxHora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldArtista1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSpinnerCantidadAsistentes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonModify)
                    .addComponent(jButtonRegresar1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBoxMonthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxMonthActionPerformed
        // TODO add your handling code here:
        jComboBoxDay.setEnabled(true);
        switch (jComboBoxMonth.getSelectedIndex()) {
            case 0:
            case 2:
            case 4:
            case 6:
            case 7:
            case 9:
            case 11:
            jComboBoxDay.removeAllItems();
            for (int i = 1; i < 32; i++) {
                jComboBoxDay.addItem(String.valueOf(i));
            }
            break;
            case 1:
            jComboBoxDay.removeAllItems();
            if (Integer.parseInt(jComboBoxYear.getSelectedItem().toString()) % 4 == 0) {
                for (int i = 1; i < 30; i++) {
                    jComboBoxDay.addItem(String.valueOf(i));
                }
            } else {
                for (int i = 1; i < 29; i++) {
                    jComboBoxDay.addItem(String.valueOf(i));
                }
            }
            break;
            default:
            jComboBoxDay.removeAllItems();
            for (int i = 1; i < 31; i++) {
                jComboBoxDay.addItem(String.valueOf(i));
            }
            break;
        }
    }//GEN-LAST:event_jComboBoxMonthActionPerformed

    private void jButtonConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConsultarActionPerformed
        //Prueba de lectura
        try {
            RandomAccessFile rafEvents = new RandomAccessFile("eventos.bin", "r"), rafIndex = new RandomAccessFile("index.bin", "r");
            String artista = jTextFieldArtista.getText();
            int fecha[] = new int [3];
            fecha[0] = Integer.parseInt(String.valueOf(jComboBoxYear.getSelectedItem()));
            fecha[1] = jComboBoxMonth.getSelectedIndex()+1;
            fecha[2] = jComboBoxDay.getSelectedIndex()+1;
            for (int i = 0; i < rafEvents.length() / 52; i++) {
                String compareArtista = "";
                int compareFecha[] = new int[3], hour = 0, people = 0;

                compareFecha[0] = rafIndex.readInt();
                compareFecha[1] = rafIndex.readInt();
                compareFecha[2] = rafIndex.readInt();
                compareArtista = rafIndex.readUTF();
                //hour = rafEvents.readInt();
                //compareArtista = rafEvents.readUTF();
                //people = rafEvents.readInt();
                if (fecha[0] == compareFecha[0] && fecha[1] == compareFecha[1] && fecha[2] == compareFecha[2] && compareArtista.contains(artista)) {
                    position = rafIndex.readLong();
                    rafEvents.seek(position);
                    fecha[0] = rafEvents.readInt();
                    fecha[1] = rafEvents.readInt();
                    fecha[2] = rafEvents.readInt();
                    hour = rafEvents.readInt();
                    artista = rafEvents.readUTF();
                    people = rafEvents.readInt();
                    jTextArea1.append("AÃ±o: " + fecha[0] + "\n");
                    jTextArea1.append("Mes: " + fecha[1] + "\n");
                    jTextArea1.append("Dia: " + fecha[2] + "\n");
                    jTextArea1.append("Hora: " + hour + "\n");
                    jTextArea1.append("Artista: " + artista.replaceAll("[|]", " ") + "\n");
                    jTextArea1.append("Cantidad de asistentes: " + people + "\n\n");
                } else {
                    rafIndex.skipBytes(8);
                }
            }
            rafIndex.close();
            rafEvents.close();
            jButtonModify.setEnabled(true);
        } catch (FileNotFoundException fnfe) {
            JOptionPane.showMessageDialog(null, "Error", "Archivo no encontrado.", JOptionPane.INFORMATION_MESSAGE);
        } catch (IOException ioe) {
            JOptionPane.showMessageDialog(null, "Error", "Ha ocurrido un fallo en la escritura o lectura de la Base de Datos.", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jButtonConsultarActionPerformed

    private void jTextFieldArtistaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldArtistaKeyTyped
        // TODO add your handling code here:
        if (jTextFieldArtista.getText().length()>= 30) {
            evt.consume();
            JOptionPane.showMessageDialog(null, "El nombre excede el limite de letras establecido", "Error", 0);
        }
    }//GEN-LAST:event_jTextFieldArtistaKeyTyped

    private void jComboBoxYear1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxYear1ActionPerformed
        // TODO add your handling code here:
        jComboBoxMes.setEnabled(true);
    }//GEN-LAST:event_jComboBoxYear1ActionPerformed

    private void jButtonRegresar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRegresar1ActionPerformed
        // TODO add your handling code here:
        Menu ventanaMenu = new Menu();
        ventanaMenu.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButtonRegresar1ActionPerformed

    private void jComboBoxMesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxMesActionPerformed
        // TODO add your handling code here:
        jComboBoxDia.setEnabled(true);
        switch (jComboBoxMes.getSelectedIndex()) {
            case 0:
            case 2:
            case 4:
            case 6:
            case 7:
            case 9:
            case 11:
            jComboBoxDia.removeAllItems();
            for (int i = 1; i < 32; i++) {
                jComboBoxDia.addItem(String.valueOf(i));
            }
            break;
            case 1:
            jComboBoxDia.removeAllItems();
            if (Integer.parseInt(String.valueOf(jComboBoxYear.getSelectedItem())) % 4 == 0) {
                for (int i = 1; i < 30; i++) {
                    jComboBoxDia.addItem(String.valueOf(i));
                }
            } else {
                for (int i = 1; i < 29; i++) {
                    jComboBoxDia.addItem(String.valueOf(i));
                }
            }
            break;
            default:
            jComboBoxDia.removeAllItems();
            for (int i = 1; i < 31; i++) {
                jComboBoxDia.addItem(String.valueOf(i));
            }
            break;
        }
    }//GEN-LAST:event_jComboBoxMesActionPerformed

    private void jComboBoxDiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxDiaActionPerformed
        // TODO add your handling code here:
        jComboBoxHora.setEnabled(true);
    }//GEN-LAST:event_jComboBoxDiaActionPerformed

    private void jTextFieldArtista1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldArtista1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldArtista1ActionPerformed

    private void jTextFieldArtista1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldArtista1KeyTyped
        // TODO add your handling code here:
        if (jTextFieldArtista.getText().length()>= 30) {
            evt.consume();
            JOptionPane.showMessageDialog(null, "El nombre excede el limite de letras establecido", "Error", 0);
        }
    }//GEN-LAST:event_jTextFieldArtista1KeyTyped

    private void jButtonModifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModifyActionPerformed
        //Se crea una variable de tipo Date con la fecha actual y una que contendrÃ¡ la fecha del evento
        Date fechaActual = new Date(), fechaEvento;
        String artista;
        int month = 1, cantidadAsistentes = 0;
        fechaActual.setYear(fechaActual.getYear()+1900);
        // <editor-fold defaultstate="collapsed" desc="Switch month">
        switch ((String)jComboBoxMes.getSelectedItem()) {
            case "Enero":
            month = 1; break;
            case "Febrero":
            month = 2; break;
            case "Marzo":
            month = 3; break;
            case "Abril":
            month = 4; break;
            case "Mayo":
            month = 5; break;
            case "Junio":
            month = 6; break;
            case "Julio":
            month = 7; break;
            case "Agosto":
            month = 8; break;
            case "Septiembre":
            month = 9; break;
            case "Octubre":
            month = 10; break;
            case "Noviembre":
            month = 11; break;
            case "Diciembre":
            month = 12; break;
            default:
            month = 1; break;
        }// </editor-fold>
        //Se crea la fecha del evento con los parÃ¡metros que se obtienen de los ComboBox respectivos y 0 para los minutos
        fechaEvento = new Date(Integer.parseInt((String)jComboBoxYear.getSelectedItem()),
            month,
            Integer.parseInt((String)jComboBoxDia.getSelectedItem()),
            Integer.parseInt((String)jComboBoxHora.getSelectedItem()),
            0
        );
        //Se extrae el nombre del artista de la caja de texto
        artista = jTextFieldArtista1.getText();
        //Se extrae la cantidad de asistentes del spinner
        cantidadAsistentes = Integer.parseInt(String.valueOf(jSpinnerCantidadAsistentes.getValue()));
        if (fechaEvento.before(fechaActual)) {
            JOptionPane.showMessageDialog(rootPane, "La fecha no puede ser una fecha anterior al momento de hoy", "Error", 0);
        } else if (!(jComboBoxDia.isEnabled())
            || !(jComboBoxHora.isEnabled())
            || (jTextFieldArtista.getText().equals(""))
            || (jSpinnerCantidadAsistentes.getValue().equals("0"))) {
            JOptionPane.showMessageDialog(rootPane, "Debe llenar todos los campos");
        } else if (jComboBoxDia.isEnabled()
            && jComboBoxHora.isEnabled()
            && !(jTextFieldArtista.getText().equals(""))
            && !(jSpinnerCantidadAsistentes.getValue().equals("0"))) {
            agregarEvento(Integer.parseInt((String)jComboBoxYear.getSelectedItem()),
                month,
                Integer.parseInt((String)jComboBoxDia.getSelectedItem()),
                Integer.parseInt((String)jComboBoxHora.getSelectedItem()),
                artista,
                cantidadAsistentes,
                position);
        }
    }//GEN-LAST:event_jButtonModifyActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:
        Date fechaActual = new Date();
        int yearActual = fechaActual.getYear() + 1900;
        for (int i = yearActual; i < (yearActual + 10); i++) {
            jComboBoxYear.addItem(String.valueOf(i));
            jComboBoxYear1.addItem(String.valueOf(i));
        }
    }//GEN-LAST:event_formWindowActivated

    private void jComboBoxYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxYearActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxYearActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Modify.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Modify.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Modify.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Modify.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Modify().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonConsultar;
    private javax.swing.JButton jButtonModify;
    private javax.swing.JButton jButtonRegresar1;
    private javax.swing.JComboBox<String> jComboBoxDay;
    private javax.swing.JComboBox<String> jComboBoxDia;
    private javax.swing.JComboBox<String> jComboBoxHora;
    private javax.swing.JComboBox<String> jComboBoxMes;
    private javax.swing.JComboBox<String> jComboBoxMonth;
    private javax.swing.JComboBox<String> jComboBoxYear;
    private javax.swing.JComboBox<String> jComboBoxYear1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner jSpinnerCantidadAsistentes;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextFieldArtista;
    private javax.swing.JTextField jTextFieldArtista1;
    // End of variables declaration//GEN-END:variables
}
